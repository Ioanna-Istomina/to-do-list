{"mappings":"AAAO,MAAMA,EAAQC,SAASC,cAAc,YAC/BC,EAASF,SAASC,cAAc,WAChCE,EAAOH,SAASC,cAAc,S,ICS3CG,EAXA,SAAoBC,EAAQ,IAC1B,OAAOA,EACJC,KACCC,GACE,mBAAmBA,EAAKC,QAAU,UAAY,OAC5CD,EAAKE,uCAC2BF,EAAKG,qBAC1CC,KACI,KCNT,SAASC,EAAcC,GACrBV,EAAKW,UAAYD,ECHnB,SAASE,EAAwBN,EAAQ,GAAIJ,EAAQ,IACnD,MAAME,EAAO,CACXG,GAAIM,KAAKC,M,MACTR,EACAD,SAAS,GAGXH,EAAMa,KAAKX,GAEXY,aAAaC,QAAQ,QAASC,KAAKC,UAAUjB,IAG/C,SAASkB,IACP,MAAMC,EAAeH,KAAKI,MAAMN,aAAaO,QAAQ,UACrD,OAAOF,UAAgB,GAGzB,SAASG,EAAoBtB,EAAQ,IACnCc,aAAaC,QAAQ,QAASC,KAAKC,UAAUjB,IAG/C,SAASuB,EAAYvB,EAAOK,GAC1B,OAAOL,EAAMwB,QAAOtB,GAAQA,EAAKG,KAAOoB,OAAOpB,KAGjD,SAASqB,EAAgB1B,EAAOK,GAC9B,OAAOL,EAAM2B,MAAKC,GAAMA,EAAGvB,KAAOA,ICbpCR,EAAOgC,iBAAiB,SAMxB,WACE,MAAMzB,EAAQV,EAAMU,MAAM0B,OAE1B,IAAK1B,EACH,OAEFM,EAAwBN,EAAO2B,GAC/BC,IACAtC,EAAMU,MAAQ,MAbhBN,EAAK+B,iBAAiB,SA2CtB,SAAmBI,GACjB,GAAIA,EAAGC,OAAOC,UAAUC,SAAS,SAE/B,YAtBJ,SAAoBH,GAClBA,EAAGC,OAAOG,cAAcC,SAExBP,EAAQR,EAAYQ,EAAOE,EAAGC,OAAOK,QAAQlC,IAC7CiB,EAAoBS,GAiBlBS,CAAWP,GAITA,EAAGC,OAAOC,UAAUC,SAAS,SAlBnC,SAA4BH,GAC1BA,EAAGC,OAAOC,UAAUM,OAAO,WAE3B,MAAMC,EAAWT,EAAGC,OAAOtC,cAAc,UACnC+C,EAASlB,OAAOiB,EAASH,QAAQlC,IACvC0B,EAAQb,IACkBQ,EAAgBK,EAAOY,GAE/BxC,QAAU8B,EAAGC,OAAOC,UAAUC,SAAS,WACzDd,EAAoBS,GAUlBa,CAAmBX,MAhDvB,IAAIF,EAAQ,GAcZ,SAASC,IACPD,EAAQb,IACR,MAAMV,EAAST,EAAWgC,GAC1Bc,QAAQC,IAAItC,GAEZD,EAAcC,GAlBhBwB","sources":["src/js/refs.js","src/js/markup.js","src/js/views.js","src/js/data.js","src/index.js"],"sourcesContent":["export const input = document.querySelector('#myInput');\nexport const addBtn = document.querySelector('.addBtn');\nexport const list = document.querySelector('#myUL');\n","function markupItem(items = []) {\n  return items\n    .map(\n      item =>\n        `<li class=\"item ${item.checked ? 'checked' : ''}\">${\n          item.value\n        } <span class=\"close\" data-id = ${item.id}>Ã—</span></li>`\n    )\n    .join('');\n}\n\nexport default markupItem;\n","import { list } from './refs';\n\nfunction addMarkupPage(markup) {\n  list.innerHTML = markup;\n}\n\nexport { addMarkupPage };\n","function saveValueInLocalStorage(value = '', items = []) {\n  const item = {\n    id: Date.now(),\n    value,\n    checked: false,\n  };\n\n  items.push(item);\n\n  localStorage.setItem('value', JSON.stringify(items));\n}\n\nfunction getValueStorage() {\n  const storageValue = JSON.parse(localStorage.getItem('value'));\n  return storageValue ?? [];\n}\n\nfunction localStorageSetItem(items = []) {\n  localStorage.setItem('value', JSON.stringify(items));\n}\n\nfunction filterItems(items, id) {\n  return items.filter(item => item.id !== Number(id));\n}\n\nfunction findElementById(items, id) {\n  return items.find(el => el.id === id);\n}\n\nexport {\n  saveValueInLocalStorage,\n  getValueStorage,\n  localStorageSetItem,\n  filterItems,\n  findElementById,\n};\n","import './sass/index.scss';\nimport { input, addBtn, list } from './js/refs';\n\nimport markupItem from './js/markup';\nimport { addMarkupPage } from './js/views';\nimport {\n  saveValueInLocalStorage,\n  getValueStorage,\n  localStorageSetItem,\n  filterItems,\n  findElementById,\n} from './js/data';\n\naddBtn.addEventListener('click', getValue);\nlist.addEventListener('click', checkItem);\n\nlet items = [];\nstart();\n\nfunction getValue() {\n  const value = input.value.trim();\n\n  if (!value) {\n    return;\n  }\n  saveValueInLocalStorage(value, items);\n  start();\n  input.value = '';\n}\n\nfunction start() {\n  items = getValueStorage();\n  const markup = markupItem(items);\n  console.log(markup);\n\n  addMarkupPage(markup);\n}\n\nfunction removeItem(ev) {\n  ev.target.parentElement.remove();\n\n  items = filterItems(items, ev.target.dataset.id);\n  localStorageSetItem(items);\n}\n\nfunction toggleClassChecked(ev) {\n  ev.target.classList.toggle('checked');\n\n  const closeBtn = ev.target.querySelector('.close');\n  const spanId = Number(closeBtn.dataset.id);\n  items = getValueStorage();\n  const currentItemObject = findElementById(items, spanId);\n\n  currentItemObject.checked = ev.target.classList.contains('checked');\n  localStorageSetItem(items);\n}\n\nfunction checkItem(ev) {\n  if (ev.target.classList.contains('close')) {\n    removeItem(ev);\n    return;\n  }\n\n  if (ev.target.classList.contains('item')) {\n    toggleClassChecked(ev);\n  }\n}\n"],"names":["$ee27a4d7c64fc8c4$export$b7e3ae3d7c15e42e","document","querySelector","$ee27a4d7c64fc8c4$export$d4f16fd4b3de98c8","$ee27a4d7c64fc8c4$export$8837f4fc672e936d","$263aef85a4d00bfb$export$2e2bcd8739ae039","items","map","item","checked","value","id","join","$9eca85a8fc5cfde5$export$cfff241ad8e37ee4","markup","innerHTML","$deb185f198c84388$export$3bd0d38ca40b2740","Date","now","push","localStorage","setItem","JSON","stringify","$deb185f198c84388$export$e200585a4d91acdf","storageValue","parse","getItem","$deb185f198c84388$export$8a518d5704c3f9c6","$deb185f198c84388$export$16c4c0987c894b8c","filter","Number","$deb185f198c84388$export$887845eab24b4f86","find","el","addEventListener","trim","$1f0dc3b9307be026$var$items","$1f0dc3b9307be026$var$start","ev","target","classList","contains","parentElement","remove","dataset","$1f0dc3b9307be026$var$removeItem","toggle","closeBtn","spanId","$1f0dc3b9307be026$var$toggleClassChecked","console","log"],"version":3,"file":"index.2db115ff.js.map"}